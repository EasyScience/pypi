name: Python libs

on:
  push:
    branches: [ GSASII ]
  pull_request:
    branches: [ GSASII ]

#   schedule:
#   # Every day at 1am
#   - cron: '0 1 * * *'

jobs:

  get_Latest:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
    - name: Checkout ANL repo
      run: |
        sudo apt-get install subversion
        svn checkout --depth empty https://subversion.xray.aps.anl.gov/pyGSAS/
        cd pyGSAS
        svn update trunk
        svn update Binaries
    - uses: actions/upload-artifact@v2
      with:
        name: GSASII_SRC
        path: ${{ github.workspace }}/pyGSAS/trunk
        retention-days: 1

    - uses: actions/upload-artifact@v2
      with:
        name: GSASII_BIN
        path: ${{ github.workspace }}/pyGSAS/Binaries/win_64_p3*
        retention-days: 1
        
#   create-Linux:
#     runs-on: ubuntu-latest
#     needs: get_Latest
    
#     steps:
#       - name: Check-out repository
#         uses: actions/checkout@v2
        
#       - uses: actions/download-artifact@v2
#         with:
#           name: GSASII_SRC
#           path: GSASII
  
#       - name: Build manylinux wheels
#         run:  |
#           chmod +x manylinux_build.sh
#           docker run -e PLAT=manylinux2010_x86_64 -v ${{ github.workspace }}:/io quay.io/pypa/manylinux2010_x86_64 /io/manylinux_build.sh  
          
#       - uses: actions/upload-artifact@v2
#         with:
#           name: GSAS-II - Manylinux
#           path: ${{ github.workspace }}/dist
  
#   create-OSX:
#     strategy:
#       max-parallel: 4
#       matrix:
#         python-version: [ '3.7', '3.8', '3.9' ]
#         os: [ macOS-latest ]

#     runs-on: ${{ matrix.os }}
#     needs: get_Latest
    
#     steps:
    
#       - name: Check-out repository
#         uses: actions/checkout@v2
        
#       - uses: actions/download-artifact@v2
#         with:
#           name: GSASII_SRC
#           path: GSASII
  
#       - uses: conda-incubator/setup-miniconda@v2
#         with:
#           miniconda-version: "latest"
#           activate-environment: foo
#           python-version: ${{ matrix.python-version }}
          
#       - name: Conda pre-build
#         shell: bash -l {0}
#         run: |
#           conda install numpy scons wheel -y 
          
#       - name: Conda build
#         shell: bash -l {0}
#         run: |
#           sudo ln -s /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
#           mv __init__.py ./GSASII/
#           python setup.py bdist_wheel --scons_args "LDFLAGS='-undefined dynamic_lookup -bundle -L/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/'" FCompiler=gfortran FORTpath=/usr/local/bin/
#         env:
#           SDKROOT: ''

# #       - name: Fixup library names
# #         run: |
# #           cd  ${{ github.workspace }}/GSASII
# #           rm -rf bindist
# #           mv ./bin ./bindist
# #           for n1 in bindist/*.so ; do
# #              export n2="$( cut -d '.' -f 1 <<< "$n1" ).so"
# #             mv ${n1} ${n2}
# #           done
# #           rm fsource/*.so
# #           rm fsource/*.a
          
# #       - name: Make packaging structure
# #         run: |
# #           cd ${{ github.workspace }}
# #           mv __init__.py ./GSASII/
# #           rm -rf .git .github
          
#       - name: Build Wheel
#         shell: bash -l {0}
#         run: |
#           pip install delocate
#           # pip wheel ./ --no-deps -w ./old/
#           mv ./dist ./old
#           delocate-wheel -w dist -v old/*.whl
        
#       - uses: actions/upload-artifact@v2
#         with:
#           name: GSAS-II - ${{ matrix.os }} - Python ${{ matrix.python-version }}
#           path: ${{ github.workspace }}/dist
          
  create-Windows:
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ '3.7' ]
        os: [ windows-latest ]

    runs-on: ${{ matrix.os }}
    needs: get_Latest
    
    steps:
      - name: Check-out repository
        uses: actions/checkout@v2
        
      - uses: actions/download-artifact@v2
        with:
          name: GSASII_SRC
          path: GSASII
      
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Conda pre-build
        shell: bash -l {0}
        run: |
          conda install numpy scons wheel m2w64-gcc-fortran -y 
          
      - name: Conda build
        shell: bash -l {0}
        run: |
          mv __init__.py ./GSASII/
          ls C:/Miniconda3/envs/foo
          ls C:/Miniconda3/envs/foo/mingw-w64
          ls C:/Miniconda3/envs/foo/mingw-w64/bin
          python setup.py bdist_wheel --scons_args FCompiler=gfortran FORTpath=C:/Miniconda3/envs/foo/mingw-w64/bin
        env:
          SDKROOT: ''
        
      - uses: actions/upload-artifact@v2
        with:
          name: GSAS-II - ${{ matrix.os }} - Python ${{ matrix.python-version }}
          path: ${{ github.workspace }}/dist
  
#       - uses: conda-incubator/setup-miniconda@v2
#         with:
#           miniconda-version: "latest"
#           activate-environment: foo
#           python-version: ${{ matrix.python-version }}
          
#       - name: Conda pre-build
#         shell: bash -l {0}
#         run: |
#           conda install -c conda-forge fortran-compiler numpy scons -y
          
#       - name: Conda build
#         shell: bash -l {0}
#         run: |
#           cd  GSASII/fsource
#           scons

#       - name: Fixup library names
#         run: |
#           cd  ../
#           rm -rf bindist
#           mv ./bin ./bindist
#           for n1 in bindist/*.pyd ; do
#              export n2="$( cut -d '.' -f 1 <<< "$n1" ).so"
#             mv ${n1} ${n2}
#           done
          
#       - name: Make packaging structure
#         run: |
#           cd ../
#           mv __init__.py ./GSASII/
#           rm -rf .git .github
        
#       - uses: actions/upload-artifact@v2
#         with:
#           name: GSAS-II - ${{ matrix.os }} - Python ${{ matrix.python-version }}
#           path: ${{ github.workspace }}

#       - uses: actions/upload-artifact@v2
#         with:
#           name: CrysFML - Windows - Python ${{ matrix.python-version }}
#           path: ./dist/*.whl

#   Upload_Artifacts:
#     runs-on: ubuntu-latest
#     needs: [create-Linux, create-OSX, create-Windows]
#     steps:
#     - uses: actions/download-artifact@v2
#     - name: Upload Artifacts GitHub releases
#       uses: ncipollo/release-action@v1
#       with:
#         draft: false
#         prerelease: true
#         allowUpdates: true
#         replacesArtifacts: true
#         token: ${{ secrets.GITHUB_TOKEN }}
#         artifacts: "./**/*.whl"
#         tag: "GSASII"
#         body: "This is a build of the GSASII libraries."
