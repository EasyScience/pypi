name: Build

on: [push, pull_request]

jobs:
  get_Latest:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
    - name: Checkout ILL repo
      run: |
        git clone https://code.ill.fr/scientific-software/crysfml/ ./
        git checkout feature-python_api-build_wheels
        rm -rf ./.git ./Html
    - uses: actions/upload-artifact@v2
      with:
        name: CrysFML_SRC
        path: ${{ github.workspace }}
        retention-days: 1

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: get_Latest
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]

    steps:
      - uses: actions/checkout@v2

      # Used to host cibuildwheel
      - uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.0.0

      - name: Build wheels
        if: runner.os == 'Linux'
        run: python -m cibuildwheel --output-dir wheelhouse
        
      - name: Build wheels
        if: runner.os == 'macOS'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          FC: gfortran-10
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        with:
          msystem: MSYS
          install: cmake mingw-w64-x86_64-toolchain
          update: true
          path-type: inherit

      - name: Build CFML
        if: runner.os == 'Windows'
        shell: msys2 {0}
        id: build
        run: |
          python -m pip install cibuildwheel==2.0.0
          python -m cibuildwheel --output-dir wheelhouse
        env:
          MINGW_ARCH: MINGW64

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
