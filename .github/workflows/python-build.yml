name: Python libs

on:
  push:
    branches: [ GSASII ]
  pull_request:
    branches: [ GSASII ]

  schedule:
  # Every day at 1am
  - cron: '0 1 * * *'

jobs:

  get_Latest:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    steps:
    - name: Checkout ANL repo
      run: |
        apt-get install subversion
        svn checkout --depth empty https://subversion.xray.aps.anl.gov/pyGSAS/
        cd pyGSAS
        svn update trunk
        cd trunk
    - uses: actions/upload-artifact@v2
      with:
        name: GSASII_SRC
        path: ${{ github.workspace }}/pyGSAS/trunk
        retention-days: 1


  create-Linux:
    strategy:
      max-parallel: 1
      matrix:
        python-version: [ '3.8' ]
        os: [ ubuntu-latest ]

    runs-on: ${{ matrix.os }}
    needs: get_Latest
    
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: GSASII_SRC
  
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: foo
          python-version: ${{ matrix.python-version }}
      - name: Conda build
        shell: bash -l {0}
        run: |
          ls
          conda install -c scons
          cd  ./pyGSAS/trunk/fsource
          scons
          cd ../
          rm -rf bindist
          mv ./bin ./bindist

      - uses: actions/upload-artifact@v2
        with:
          name: GSAS-II - ${{ matrix.os }} - Python ${{ matrix.python-version }}
          path: ${{ github.workspace }}

#   Upload_Artifacts:
#     runs-on: ubuntu-latest
#     needs: [create-Linux, create-OSX, create-Windows]
#     steps:
#     - uses: actions/download-artifact@v2
#     - name: Upload Artifacts GitHub releases
#       uses: ncipollo/release-action@v1
#       with:
#         draft: false
#         prerelease: true
#         allowUpdates: true
#         replacesArtifacts: true
#         token: ${{ secrets.GITHUB_TOKEN }}
#         artifacts: "./**/*.whl"
#         tag: "CFML"
#         body: "This is a build of the CFML libraries."
